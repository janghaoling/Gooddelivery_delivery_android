buildscript {
    repositories {
        //maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //  classpath 'io.fabric.tools:gradle:1.26.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    // maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.gooddelivery.delivery"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 11
        multiDexEnabled true
        versionName "2.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            storeFile file("jks/delivery.jks")
            storePassword 'delivery'
            keyAlias 'delivery'
            keyPassword 'delivery'
        }
    }

    buildTypes {

        debug{
            manifestPlaceholders = [crashlyticsEnabled:false]
        }

        release {
            manifestPlaceholders = [crashlyticsEnabled:true]
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.applicationId}_V${variant.versionCode}_VN-${variant.versionName}_" + new Date().format('yyyy-MM-dd') + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'me.philio:pinentryview:1.0.6'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation group: 'com.pubnub', name: 'pubnub-gson', version: '4.10.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.ethanhua:skeleton:1.0.0'

    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'me.himanshusoni.chatmessageview:chat-message-view:1.0.3'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.google.firebase:firebase-messaging:17.4.0'
    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation 'com.chaos.view:pinview:1.3.2'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    /*implementation('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }*/

    testImplementation 'junit:junit:4.12'

    //Firebase Crash Reporting
    implementation 'com.google.firebase:firebase-crash:16.2.1'
    implementation 'com.google.firebase:firebase-auth:16.2.1'
    implementation 'com.google.firebase:firebase-analytics:16.4.0'


    // Firebase Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
//    implementation 'io.github.inflationx:calligraphy3:3.1.1'
//    implementation 'io.github.inflationx:viewpump:2.0.3'

}
apply plugin: 'com.google.gms.google-services'